// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vue_expenses_api.Infrastructure;

namespace vue_expenses_api.Migrations
{
    [DbContext(typeof(ExpensesContext))]
    [Migration("20191028083452_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("vue_expenses_api.Domain.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TypeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TypeId");

                    b.ToTable("Expenses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2019, 10, 28, 8, 34, 52, 476, DateTimeKind.Local).AddTicks(3468),
                            Date = new DateTime(2019, 10, 28, 8, 34, 52, 488, DateTimeKind.Local).AddTicks(6617),
                            TypeId = 1,
                            UpdatedAt = new DateTime(2019, 10, 28, 8, 34, 52, 476, DateTimeKind.Local).AddTicks(3468),
                            Value = 10m
                        });
                });

            modelBuilder.Entity("vue_expenses_api.Domain.ExpenseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ExpenseCateogries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2019, 10, 28, 8, 34, 52, 476, DateTimeKind.Local).AddTicks(3468),
                            Description = "",
                            Name = "General Expenses",
                            UpdatedAt = new DateTime(2019, 10, 28, 8, 34, 52, 476, DateTimeKind.Local).AddTicks(3468)
                        });
                });

            modelBuilder.Entity("vue_expenses_api.Domain.ExpenseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ExpenseTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2019, 10, 28, 8, 34, 52, 476, DateTimeKind.Local).AddTicks(3468),
                            Description = "",
                            Name = "Credit Card",
                            UpdatedAt = new DateTime(2019, 10, 28, 8, 34, 52, 476, DateTimeKind.Local).AddTicks(3468)
                        });
                });

            modelBuilder.Entity("vue_expenses_api.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Hash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2019, 10, 28, 8, 34, 52, 476, DateTimeKind.Local).AddTicks(3468),
                            Email = "foo@bar.com",
                            Hash = new byte[] { 108, 63, 236, 114, 165, 202, 232, 51, 48, 236, 80, 221, 117, 53, 66, 19, 89, 246, 165, 30, 189, 233, 107, 90, 46, 214, 106, 163, 204, 19, 56, 102, 22, 217, 10, 21, 68, 30, 134, 3, 212, 189, 169, 153, 10, 105, 217, 32, 122, 16, 33, 133, 115, 82, 162, 56, 253, 252, 235, 29, 165, 157, 241, 29 },
                            Salt = new byte[] { 194, 245, 187, 253, 99, 116, 82, 69, 162, 6, 205, 41, 106, 159, 111, 138 },
                            UpdatedAt = new DateTime(2019, 10, 28, 8, 34, 52, 476, DateTimeKind.Local).AddTicks(3468),
                            UserName = "test"
                        });
                });

            modelBuilder.Entity("vue_expenses_api.Domain.Expense", b =>
                {
                    b.HasOne("vue_expenses_api.Domain.ExpenseCategory", "Category")
                        .WithMany("Expenses")
                        .HasForeignKey("CategoryId");

                    b.HasOne("vue_expenses_api.Domain.ExpenseType", "Type")
                        .WithMany("Expenses")
                        .HasForeignKey("TypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
